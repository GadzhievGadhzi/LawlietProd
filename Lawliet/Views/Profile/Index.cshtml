@using Lawliet.Data;
@using Microsoft.EntityFrameworkCore;
@using Microsoft.Extensions.Caching.Memory;
@using Lawliet.Services;
@using Newtonsoft.Json;
@model User;

@{
    var db = Context.RequestServices.GetService<UserDataContext>();
}

@{
    if (!Context.User.Identity.IsAuthenticated || Model == null) {
        Context.Response.Redirect($"/auth/login/");
        return;
    }

    var user = Model;
    var topics = user.Topics;
    var pictureUrl = @user.PictureUrl;
}

<section class="h-100 gradient-custom-2">
    <div class="container py-5 h-100">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col col-lg-9 col-xl-7">
                <div class="card">
                    <div class="rounded-top text-white d-flex flex-row" style="background-color: #0d6efd; height:200px;">
                        <div class="ms-4 mt-5 d-flex flex-column" style="width: 150px;">
                            <img src="@pictureUrl" alt="Generic placeholder image" class="img-fluid img-thumbnail mt-4 mb-2" style="width: 150px; z-index: 1">
                            <button type="button" class="btn btn-outline-dark" data-mdb-ripple-color="dark" style="z-index: 1;"><a href="/profile/edit?id=@user.Id">Ред. профиль</a></button>
                        </div>
                        <div class="ms-3" style="margin-top: 100px;">
                            <h5>@user.Name</h5>
                            <p>Статус: @((user.Status == "Teacher") ? "Учитель" : "Ученик")</p>
                            <p style="margin-top: -15px;">Темы: @topics.Count()</p>
                        </div>
                    </div>
                    <div class="p-4 text-black" style="background-color: #f8f9fa;">
                        @if(user.Status == "Teacher") {
                            <div class="d-flex justify-content-end text-center py-1">
                                <div>
                                    <a href="/task/addtask/">
                                        <button type="button" class="btn btn-primary" style="margin-top: -5px;">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-clipboard2-plus" viewBox="0 0 16 16">
                                                <path d="M9.5 0a.5.5 0 0 1 .5.5.5.5 0 0 0 .5.5.5.5 0 0 1 .5.5V2a.5.5 0 0 1-.5.5h-5A.5.5 0 0 1 5 2v-.5a.5.5 0 0 1 .5-.5.5.5 0 0 0 .5-.5.5.5 0 0 1 .5-.5h3Z"></path>
                                                <path d="M3 2.5a.5.5 0 0 1 .5-.5H4a.5.5 0 0 0 0-1h-.5A1.5 1.5 0 0 0 2 2.5v12A1.5 1.5 0 0 0 3.5 16h9a1.5 1.5 0 0 0 1.5-1.5v-12A1.5 1.5 0 0 0 12.5 1H12a.5.5 0 0 0 0 1h.5a.5.5 0 0 1 .5.5v12a.5.5 0 0 1-.5.5h-9a.5.5 0 0 1-.5-.5v-12Z"></path>
                                                <path d="M8.5 6.5a.5.5 0 0 0-1 0V8H6a.5.5 0 0 0 0 1h1.5v1.5a.5.5 0 0 0 1 0V9H10a.5.5 0 0 0 0-1H8.5V6.5Z"></path>
                                            </svg>
                                            Добавить задание
                                        </button>
                                    </a>
                                </div>
                            </div>
                        }
                    </div>
                    <div class="card-body p-4 text-black">
                        @if (!string.IsNullOrEmpty(user.AboutMe)) {
                            <div class="mb-5">
                                <p class="lead fw-normal mb-1">О учителе</p>
                                <div class="p-4" style="background-color: #f8f9fa;">
                                    <p>@user.AboutMe</p>
                                </div>
                            </div>
                        }

                        <br />
                        <div class="row">
                            @{
                                int i = 0;
                                foreach (var task in db.StudentTasks.Where(x => x.Group == user.Group).Take(9)) {
                                    i++;
                                    <div class="col-md-6">
                                        <div class="card mb-4 box-shadow">
                                            <div class="card-header"></div>
                                            <div class="card-body">
                                                <h5 class="card-title">@task.Title</h5>
                                                <p class="card-text mb-1">Группа: @task.Group</p>
                                                <p class="card-text">Срок сдачи: @task.EndDate</p>
                                                <div class="d-flex justify-content-between align-items-center">
                                                    <div class="btn-group">
                                                        <button type="button" class="btn btn-outline-secondary" data-bs-toggle="modal" data-bs-target="#staticBackdrop@(i)">Смотреть</button>
                                                    </div>
                                                    <small class="text-muted">@task.StartDate.ToShortDateString()</small>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="modal fade" id="staticBackdrop@(i)" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                                        <div class="modal-dialog">
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <h5 class="modal-title" id="staticBackdropLabel">@task.Title</h5>
                                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
                                                </div>
                                                <div class="modal-body">
                                                    Описание: @task.Description
                                                    <br />
                                                    Группа: @task.Group
                                                    <br />
                                                    Срок сдачи: @task.EndDate
                                                    <br />
                                                </div>
                                                <div class="modal-footer">
                                                    @{
                                                        var competedTask = JsonConvert.DeserializeObject<List<string>>(user.CompletedTask);
                                                    }

                                                    @if (!competedTask.Contains(task.Id)) {
                                                        <a href="task/RemoveUser?taskId=@task.Id"><button type="button" class="btn btn-primary" data-bs-dismiss="modal">Завершить задание</button></a>
                                                    } else {
                                                        <button type="submit" class="btn btn-danger" data-bs-dismiss="modal">Задание завершено</button>
                                                    }
                                                    
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<style>
    a {
        color: black;
    }

        a:hover {
            color: black;
            cursor: default;
            text-decoration: none;
        }
</style>

<style>
    .card-header {
        background-color: #0d6efd;
        color: white;
        height: 50px;
    }

</style>